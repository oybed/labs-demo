node ('') {
    env.OPENSHIFT_BUILD_NAMESPACE = \"{{ demo_projectname }}-pipeline\"
    env.DEV_PROJECT = \"{{ demo_projectname }}-dev\"
    env.TEST_PROJECT = \"{{ demo_projectname }}-test\"
    env.SEC_TEST_PROJECT = \"{{ demo_projectname }}-sec-test\"
    env.UAT_PROJECT = \"{{ demo_projectname }}-uat\"

    env.APP_NAME = \"{{ demo_app_name }}\"

    env.OCP_TOKEN = readFile('/var/run/secrets/kubernetes.io/serviceaccount/token').trim()
}

node('') {
    stage('Build Image') {
        openshiftBuild(buildConfig: \"${env.APP_NAME}\", showBuildLogs: 'true')
    }

    stage ('Deploy to Dev') {
        input \"Deploy Application to Dev?\"

        openshiftTag (apiURL: \"${env.OPENSHIFT_API_URL}\", authToken: \"${env.OCP_TOKEN}\", destStream: \"${env.APP_NAME}\", destTag: 'latest', destinationAuthToken: \"${env.OCP_TOKEN}\", destinationNamespace: \"${env.DEV_PROJECT}\", namespace: \"${env.OPENSHIFT_BUILD_NAMESPACE}\", srcStream: \"${env.APP_NAME}\", srcTag: 'latest')

        openshiftVerifyDeployment (apiURL: \"${env.OPENSHIFT_API_URL}\", authToken: \"${env.OCP_TOKEN}\", depCfg: \"${env.APP_NAME}\", namespace: \"${env.DEV_PROJECT}\", verifyReplicaCount: true)
    }

    stage ('Deploy to Test') {
        input \"Promote Application to Test?\"

        openshiftTag (apiURL: \"${env.OPENSHIFT_API_URL}\", authToken: \"${env.OCP_TOKEN}\", destStream: \"${env.APP_NAME}\", destTag: 'latest', destinationAuthToken: \"${env.OCP_TOKEN}\", destinationNamespace: \"${env.TEST_PROJECT}\", namespace: \"${env.DEV_PROJECT}\", srcStream: \"${env.APP_NAME}\", srcTag: 'latest')

        openshiftVerifyDeployment (apiURL: \"${env.OPENSHIFT_API_URL}\", authToken: \"${env.OCP_TOKEN}\", depCfg: \"${env.APP_NAME}\", namespace: \"${env.TEST_PROJECT}\", verifyReplicaCount: true)
    }

    stage ('Deploy to UAT') {
        input \"Promote Application to UAT?\"

        openshiftTag (apiURL: \"${env.OPENSHIFT_API_URL}\", authToken: \"${env.OCP_TOKEN}\", destStream: \"${env.APP_NAME}\", destTag: 'latest', destinationAuthToken: \"${env.OCP_TOKEN}\", destinationNamespace: \"${env.UAT_PROJECT}\", namespace: \"${env.TEST_PROJECT}\", srcStream: \"${env.APP_NAME}\", srcTag: 'latest')

        openshiftVerifyDeployment (apiURL: \"${env.OPENSHIFT_API_URL}\", authToken: \"${env.OCP_TOKEN}\", depCfg: \"${env.APP_NAME}\", namespace: \"${env.UAT_PROJECT}\", verifyReplicaCount: true)
    }
}
